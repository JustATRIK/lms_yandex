{"reply": {"code": "import sys\nfrom collections import deque\n\n\nn, m = map(int, input().split())\n\nowner = list(map(int, input().split()))\ngraph = [[] for i in range(n)]\n\nfor i in range(m):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    cost = 0 if owner[a] == owner[b] else 1\n    graph[a].append((b, cost))\n    graph[b].append((a, cost))\ndist = [10 ** 6] * n\nprev = [-1] * n\ndist[0] = 0\ndq = deque()\ndq.append(0)\nwhile dq:\n    u = dq.popleft()\n    for v, w in graph[u]:\n        if dist[v] > dist[u] + w:\n            dist[v] = dist[u] + w\n            prev[v] = u\n            if w == 0:\n                dq.appendleft(v)\n            else:\n                dq.append(v)\n\nif dist[n - 1] == 10 ** 6:\n    print(\"impossible\")\n    exit()\npath = []\ncur = n - 1\nwhile cur != -1:\n    path.append(cur + 1)\n    cur = prev[cur]\npath.reverse()\nprint(dist[n - 1], len(path))\n", "language": "python3.12"}}